{"version":3,"sources":["components/Fretboard/Fret/BoardSegment/BoardSegment.tsx","components/Fretboard/Fret/FretBar/FretBar.tsx","components/Fretboard/Fret/Strings/Strings.tsx","components/Fretboard/Fret/Fret.tsx","components/Fretboard/Fretboard.tsx","components/Main/Main.tsx","components/MixBoard/Dial/DialMarker.tsx","store/static.ts","store/logger.ts","store/helpers.ts","store/fretboard.ts","store/index.ts","hooks/useActions.ts","hooks/useDebounce.ts","components/MixBoard/Dial/Options/ModeOptions.tsx","components/MixBoard/Dial/Options/ScaleOptions.tsx","components/MixBoard/Dial/Options/Options.tsx","components/MixBoard/Dial/Dial.tsx","components/MixBoard/Metronome/BPMDisplay.tsx","components/MixBoard/Metronome/Metronome.tsx","components/MixBoard/Notes/Notes.tsx","components/MixBoard/Slider/Slider.tsx","components/MixBoard/MixBoard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Root","styled","div","MarkerWrapper","Marker","MarkerTop","MarkerBottom","BoardSegment","props","boardMarkers","Fret","String","NoteLabel","Strings","fretPosition","boardDisplay","useSelector","state","fretboard","notes","i","push","map","noteDetails","key","isSelected","note","Wrapper","FretLabel","FretComponentsWrapper","Bottom","markerAmount","FretBar","Fretboard","renderFrets","fretContainer","includes","Main","MarkerContainer","attrs","angle","MarkerGrab","DialMarker","center","setSelected","setAngle","disabled","useState","grabbed","setGrabbed","handleMouseMove","e","stopPropagation","updated","cX","cY","pts","x","y","updatedAngle","Math","floor","atan","PI","getAngle","pageX","pageY","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onMouseMove","initialNotes","highlight","scales","modes","Ionian","Dorian","Phrygian","Lydian","Mixolydian","Aeolian","Locrian","frequencies","standardTuning","logger","store","next","action","tuning","size","mapped","ordered","orderNotesArr","slice","updateBoardDisplay","currentDisplay","selectedNotes","string","fret","startNote","startIdx","findIndex","scaleNotes","scale","orderedNotes","name","position","modeBoardDisplay","mode","modeOrderedNotes","console","log","modeNotes","repeated","root","reduce","boardAcc","stringIdx","stringAcc","fretIdx","r","idx","check","isWithinRange","initialState","open","frets","selectedScale","selectedScaleName","selectedMode","selectedModeName","selectedRoot","fretboardReducer","handleActions","UPDATE_TUNING","payload","SELECT_NOTE","updatedNotes","filter","updatedDisplay","SELECT_SCALE","detail","SELECT_MODE","SELECT_ROOT","SELECT_SCALE_NAME","SELECT_MODE_NAME","rootReducer","combineReducers","useActions","dispatch","useDispatch","setSelectedNote","type","setSelectedScale","setSelectedMode","handleRootChange","setSelectedScaleName","setSelectedModeName","setSelectedRoot","useDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","Option","p","bottom","left","selected","label","ModeOptions","React","memo","min","max","debouncedMode","angleHash","acc","el","bottomSelectionMin","bottomSelectionMax","opt","ScaleOptions","debouncedScale","Options","children","increment","Object","keys","length","half","Outline","Bevel","Center","Dial","dialRef","useRef","setCenter","setDisabled","current","getBoundingClientRect","ref","Control","BPMDisplay","clicker","audioCxt","AudioContext","osc","createOscillator","gainNode","createGain","frequency","connect","destination","start","currentTime","gain","setValueAtTime","onClick","setInterval","stop","Metronome","NotesWrapper","NoteGradient","NoteStyle","Notes","SliderContainer","NoteSlider","NoteWrapper","CurrentNote","Slider","setIncrement","sliderRef","debouncedRoot","className","step","onChange","event","Number","target","MixBoardContainer","PanelWrapper","MidPanelWrapper","MixBoard","App","Boolean","window","location","hostname","match","middleware","applyMiddleware","createStore","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.133403df.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  width: 100%;\n`;\n\nconst MarkerWrapper = styled.div`\n  position: absolute;\n  top: 145px;\n  left: 22.5px;\n`;\n\nconst Marker = styled.div`\n  width: 10px;\n  height: 10px;\n  background-color: #daa520;\n  border-radius: 30px;\n`;\nconst MarkerTop = styled.div`\n  width: 10px;\n  height: 10px;\n  background-color: #daa520;\n  border-radius: 30px;\n  position: absolute;\n  top: 94px;\n  left: 22.5px;\n`;\nconst MarkerBottom = styled.div`\n  width: 10px;\n  height: 10px;\n  background-color: #daa520;\n  border-radius: 30px;\n  position: absolute;\n  top: 196px;\n  left: 22.5px;\n`;\n\ninterface Props {\n  boardMarkers: number;\n}\n\nconst BoardSegment: FunctionComponent<Props> = (props: Props) => {\n  const { boardMarkers } = props;\n\n  return (\n    <Root>\n      {boardMarkers === 2 && (\n        <div>\n          <MarkerTop />\n          <MarkerBottom />\n        </div>\n      )}\n      {boardMarkers === 1 && (\n        <MarkerWrapper>\n          <Marker />\n        </MarkerWrapper>\n      )}\n    </Root>\n  );\n};\n\nexport default BoardSegment;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  height: 300px;\n  width: 3px;\n  background: #ccc;\n`;\n\n// background: linear-gradient(\n//   90deg,\n//   rgba(223, 205, 159, 1) 0%,\n//   rgba(218, 165, 32, 1) 13%,\n//   rgba(218, 165, 32, 1) 87%,\n//   rgba(223, 205, 159, 1) 100%\n// );\nconst Fret: FunctionComponent = (props) => {\n  return <Root></Root>;\n};\n\nexport default Fret;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { BoardDisplayNote } from \"../../../../global\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../../../store/state\";\nimport { FretboardModel } from \"../../../../store/fretboard\";\n\nconst Root = styled.div`\n  width: 100%;\n  height: 300px;\n  border-bottom: 2px solid #ccc;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n// align-items: center;\n\nconst String = styled.div`\n  height: 2px;\n  width: 55px;\n  background-color: #ccc;\n  position: relative;\n`;\n\nconst NoteLabel = styled.div`\n  background-color: #ccc;\n  width: 25px;\n  height: 25px;\n  color: #333;\n  border-radius: 25px;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  left: 15px;\n  top: -12.5px;\n  font-weight: 600;\n`;\ninterface Props {\n  fretboard: BoardDisplayNote[][];\n  fretPosition: number;\n}\n\nconst Strings: FunctionComponent<Props> = (props: Props) => {\n  const { fretPosition } = props;\n\n  const { boardDisplay } = useSelector<RootState, FretboardModel>(\n    (state) => state.fretboard\n  );\n\n  let notes = [];\n  for (let i = 5; i >= 0; i--) {\n    notes.push(boardDisplay[i][fretPosition]);\n  }\n\n  return (\n    <Root>\n      {notes.map((noteDetails: BoardDisplayNote, i: number) => {\n        return (\n          <String key={i}>\n            {noteDetails.isSelected && (\n              <NoteLabel>{noteDetails.note}</NoteLabel>\n            )}\n          </String>\n        );\n      })}\n    </Root>\n  );\n};\n\nexport default Strings;\n","import React, { FunctionComponent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { FretboardModel } from \"../../../store/fretboard\";\nimport { RootState } from \"../../../store/state\";\nimport BoardSegment from \"./BoardSegment/BoardSegment\";\nimport FretBar from \"./FretBar/FretBar\";\nimport Strings from \"./Strings/Strings\";\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n// flex-direction: column;\n\nconst FretLabel = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nconst FretComponentsWrapper = styled.div`\n  position: relative;\n  border-top: 2px solid #ccc;\n`;\n\nconst Bottom = styled.div`\n  height: 304px;\n  width: 3px;\n  background: #ccc;\n  margin-top: 37px;\n`;\n\ninterface Props {\n  fretPosition: number;\n  markerAmount: number;\n}\n\nconst Fret: FunctionComponent<Props> = (props: Props) => {\n  const { fretPosition, markerAmount } = props;\n  const { boardDisplay } = useSelector<RootState, FretboardModel>(\n    (state) => state.fretboard\n  );\n\n  return (\n    <Wrapper>\n      <div>\n        <FretLabel>{fretPosition}</FretLabel>\n        <FretComponentsWrapper>\n          <Strings fretboard={boardDisplay} fretPosition={fretPosition} />\n          <BoardSegment boardMarkers={markerAmount} />\n          <FretBar />\n        </FretComponentsWrapper>\n      </div>\n      {fretPosition === 22 && <Bottom />}\n    </Wrapper>\n  );\n};\n\nexport default Fret;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport Fret from \"./Fret/Fret\";\n\nconst Root = styled.div`\n  width: 100%;\n  border-left: none;\n  display: flex;\n`;\n\nconst Fretboard: FunctionComponent = (props) => {\n  const renderFrets = (() => {\n    let fretContainer: React.ReactElement[] = [];\n    for (let i = 0; i <= 22; i++) {\n      if ([3, 5, 7, 9, 15, 17, 19, 21].includes(i)) {\n        fretContainer.push(<Fret key={i} fretPosition={i} markerAmount={1} />);\n      } else if (i === 12) {\n        fretContainer.push(<Fret key={i} fretPosition={i} markerAmount={2} />);\n      } else {\n        fretContainer.push(<Fret key={i} fretPosition={i} markerAmount={0} />);\n      }\n    }\n    return fretContainer;\n  })();\n  return (\n    <div>\n      <Root>{renderFrets}</Root>\n    </div>\n  );\n};\n\nexport default Fretboard;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport Fretboard from \"../Fretboard/Fretboard\";\n\nconst Root = styled.div`\n  min-width: 1200px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Main: FunctionComponent = (props) => {\n  return (\n    <Root>\n      <Fretboard />\n    </Root>\n  );\n};\n\nexport default Main;\n","import React, { FunctionComponent, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst MarkerContainer = styled.div.attrs((props: { angle: number }) => ({\n  angle: props.angle || 0,\n}))`\n  height: 176px;\n  width: 176px;\n  border-radius: 88px;\n  background: transparent;\n  position: relative;\n  transform: rotate(${(props) => props.angle}deg);\n`;\n\nconst MarkerGrab = styled.div`\n  position: absolute;\n  bottom: 0px;\n  left: 58px;\n  background: radial-gradient(#fff 2%, #444);\n  height: 60px;\n  width: 60px;\n  border-radius: 30px;\n  cursor: grab;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n\nconst Marker = styled.div`\n  background-color: #fff;\n  height: 10px;\n  width: 10px;\n  border-radius: 5px;\n  background: transparent;\n`;\n\ninterface Coordinates {\n  x: number;\n  y: number;\n}\ninterface Props {\n  center: Coordinates;\n  angle: number;\n  setSelected: (val: boolean) => void;\n  setAngle: (val: number) => void;\n  disabled: boolean;\n}\n\nconst DialMarker: FunctionComponent<Props> = (props: Props) => {\n  const { center, setSelected, angle, setAngle, disabled } = props;\n  const [grabbed, setGrabbed] = useState(false);\n\n  const getAngle = (cX: number, cY: number, pts: { x: number; y: number }) => {\n    const x = cX - pts.x;\n    const y = cY - pts.y;\n    let updatedAngle = Math.floor((Math.atan(y / x) * 180) / Math.PI);\n\n    if ((x < 0 && y >= 0) || (x < 0 && y < 0)) {\n      updatedAngle += 90;\n    } else {\n      updatedAngle += 270;\n    }\n    return updatedAngle;\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (!grabbed || disabled) {\n      return;\n    }\n\n    const updated = getAngle(e.pageX, e.pageY, center);\n    if (angle !== updated) {\n      setAngle(updated);\n    }\n  };\n\n  return (\n    <MarkerContainer\n      angle={angle}\n      onMouseDown={(e) => {\n        setGrabbed(true);\n      }}\n      onMouseUp={(e) => {\n        setGrabbed(false);\n      }}\n      onMouseEnter={() => {\n        setSelected(true);\n      }}\n      onMouseLeave={() => {\n        setGrabbed(false);\n        setSelected(false);\n      }}\n      onMouseMove={(e) => handleMouseMove(e)}\n    >\n      <MarkerGrab>\n        <Marker />\n      </MarkerGrab>\n    </MarkerContainer>\n  );\n};\n\nexport default DialMarker;\n","import { BoardDisplayNote, ScaleName, ModeName, Note } from \"../global\";\n\nexport const initialNotes: BoardDisplayNote[] = [\n  { note: \"A\", isSelected: false, highlight: [] },\n  { note: \"A#\", isSelected: false, highlight: [] },\n  { note: \"B\", isSelected: false, highlight: [] },\n  { note: \"C\", isSelected: false, highlight: [] },\n  { note: \"C#\", isSelected: false, highlight: [] },\n  { note: \"D\", isSelected: false, highlight: [] },\n  { note: \"D#\", isSelected: false, highlight: [] },\n  { note: \"E\", isSelected: false, highlight: [] },\n  { note: \"F\", isSelected: false, highlight: [] },\n  { note: \"F#\", isSelected: false, highlight: [] },\n  { note: \"G\", isSelected: false, highlight: [] },\n  { note: \"G#\", isSelected: false, highlight: [] },\n];\n\ntype Scales = {\n  [key in ScaleName]: number[];\n};\n\nexport const scales: Scales = {\n  \"Natural Major\": [0, 2, 4, 5, 7, 9, 11],\n  \"Natural Minor\": [0, 2, 3, 5, 7, 8, 10],\n  \"Major Pentatonic\": [0, 2, 4, 7, 9],\n  \"Minor Pentatonic\": [0, 3, 5, 7, 10],\n  \"Major Blues\": [0, 2, 3, 4, 7, 9],\n  \"Minor Blues\": [0, 3, 5, 6, 7, 10],\n};\n\ntype Modes = {\n  [key in ModeName]: number;\n};\n\nexport const modes: Modes = {\n  Ionian: 0,\n  Dorian: 1,\n  Phrygian: 2,\n  Lydian: 3,\n  Mixolydian: 4,\n  Aeolian: 5,\n  Locrian: 6,\n};\n\n// ************************Tunings*************************\n\nexport type Frequencies = {\n  [k in Note]: [number, number, number, number];\n};\n\nexport const frequencies: Frequencies = {\n  E: [82.41, 164.8, 329.6, 659.3],\n  F: [87.31, 174.6, 349.2, 698.5],\n  \"F#\": [92.5, 185.0, 370.0, 740.0],\n  G: [98.0, 196.0, 392.0, 784.0],\n  \"G#\": [103.8, 207.7, 415.3, 830.6],\n  A: [110.0, 220.0, 440.0, 880.0],\n  \"A#\": [116.5, 233.1, 466.2, 932.3],\n  B: [123.5, 246.9, 493.9, 987.8],\n  C: [130.8, 261.6, 523.3, 1047],\n  \"C#\": [138.6, 277.2, 554.4, 1109],\n  D: [146.8, 293.7, 587.3, 1175],\n  \"D#\": [155.6, 311.1, 622.3, 1245],\n};\n\nexport const standardTuning: BoardDisplayNote[] = [\n  {\n    note: \"E\",\n    isSelected: false,\n    highlight: [],\n  },\n  {\n    note: \"A\",\n    isSelected: false,\n    highlight: [],\n  },\n  {\n    note: \"D\",\n    isSelected: false,\n    highlight: [],\n  },\n  {\n    note: \"G\",\n    isSelected: false,\n    highlight: [],\n  },\n  {\n    note: \"B\",\n    isSelected: false,\n    highlight: [],\n  },\n  {\n    note: \"E\",\n    isSelected: false,\n    highlight: [],\n  },\n];\n","import { Middleware } from \"redux\";\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    console.log(action);\n  }\n  return next(action);\n};\n","import {\n  BoardDisplayNote,\n  BoardDisplay,\n  Note,\n  Fretboard,\n  FretboardString,\n  Scale,\n  Mode,\n  BoardDisplayString,\n  ScaleName,\n} from \"../global\";\nimport { initialNotes, modes } from \"./static\";\nimport { scales } from \"./static\";\n\nexport const boardDisplay = (\n  tuning: BoardDisplayNote[],\n  size: number = 22\n): BoardDisplay => {\n  const mapped: BoardDisplay = tuning.map((noteDetails) => {\n    const ordered = orderNotesArr(noteDetails.note);\n    return [...ordered, ...ordered?.slice(0, size - 11)];\n  });\n  return mapped;\n};\n\nexport const updateBoardDisplay = (\n  currentDisplay: BoardDisplay,\n  selectedNotes: Note[]\n): BoardDisplay => {\n  return currentDisplay.map((string) => {\n    return string.map((fret) => {\n      if (selectedNotes.includes(fret.note)) {\n        return {\n          ...fret,\n          isSelected: true,\n        };\n      } else {\n        return {\n          ...fret,\n          isSelected: false,\n        };\n      }\n    });\n  });\n};\n\nexport const fretboard = (\n  tuning: BoardDisplayNote[],\n  size: number = 22\n): Fretboard => {\n  const mapped: Fretboard = tuning.map((noteDetails) => {\n    const ordered = orderNotesArr(noteDetails.note);\n    const string: FretboardString = {\n      open: ordered[0].note,\n      frets: [\n        ...ordered.map((fret) => fret.note),\n        ...ordered?.slice(0, size - 11).map((fret) => fret.note),\n      ],\n    };\n    return string;\n  });\n  return mapped;\n};\n\nexport const orderNotesArr = (startNote: Note): BoardDisplayNote[] => {\n  const startIdx = initialNotes.findIndex(\n    (noteDetails) => noteDetails.note === startNote\n  );\n\n  return [...initialNotes.slice(startIdx), ...initialNotes.slice(0, startIdx)];\n};\n\nexport const scaleNotes = (scale: Scale): BoardDisplayNote[] => {\n  const orderedNotes = orderNotesArr(scale.note);\n  return scales[scale.name].map((position) => {\n    return orderedNotes[position];\n  });\n};\n\nexport const modeNotes = (mode: Mode): BoardDisplayNote[] => {\n  console.log(mode);\n  const orderedNotes = scaleNotes({\n    name: mode.scale,\n    note: mode.note,\n  });\n  let modeOrdered: BoardDisplayNote[] = [];\n  if (modes[mode.name] === 0) {\n    modeOrdered = orderedNotes;\n  } else {\n    modeOrdered = [\n      ...orderedNotes.slice(modes[mode.name]),\n      ...orderedNotes.slice(0, modes[mode.name]),\n    ];\n  }\n  return modeOrdered;\n};\n\nexport const modeBoardDisplay = (\n  currentDisplay: BoardDisplay,\n  mode: Mode\n): BoardDisplay => {\n  const modeOrderedNotes = modeNotes(mode);\n  let repeated = [\n    ...modeOrderedNotes,\n    ...modeOrderedNotes,\n    ...modeOrderedNotes,\n  ];\n\n  let root: number | null = null;\n\n  const isWithinRange = (r: number | null, idx: number) => {\n    let check = false;\n    if (r) {\n      if (idx >= r - 1 && idx <= r + 3) {\n        check = true;\n      }\n    }\n    return check;\n  };\n\n  return currentDisplay.reduce(\n    (boardAcc: BoardDisplay, string: BoardDisplayString, stringIdx: number) => {\n      return [\n        ...boardAcc,\n        string.reduce(\n          (\n            stringAcc: BoardDisplayString,\n            fret: BoardDisplayNote,\n            fretIdx: number\n          ) => {\n            let isSelected = false;\n            // if it's first string, the root hasn't been set and the first note in orderNotes equals the current note, set root\n            if (stringIdx === 0 && !root && repeated[0].note === fret.note) {\n              root = fretIdx;\n            }\n            if (\n              root &&\n              isWithinRange(root, fretIdx) &&\n              repeated[0].note === fret.note\n            ) {\n              repeated = [...repeated.slice(1)];\n              isSelected = true;\n            }\n            return [\n              ...stringAcc,\n              {\n                ...fret,\n                isSelected,\n              },\n            ];\n          },\n          []\n        ),\n      ];\n    },\n    []\n  );\n};\n","import { handleActions } from \"redux-actions\";\nimport {\n  BoardDisplay,\n  BoardDisplayNote,\n  Fretboard,\n  Mode,\n  ModeName,\n  Note,\n  Scale,\n  ScaleName,\n} from \"../global\";\nimport {\n  boardDisplay,\n  fretboard,\n  modeBoardDisplay,\n  scaleNotes,\n  updateBoardDisplay,\n} from \"./helpers\";\nimport { standardTuning } from \"./static\";\n\n// Model\nexport interface FretboardModel {\n  boardDisplay: BoardDisplay;\n  tuning: BoardDisplayNote[];\n  fretboard: Fretboard;\n  selectedNotes: Note[];\n  selectedScale: Scale | null;\n  selectedScaleName: ScaleName | \"none\";\n  selectedMode: Mode | null;\n  selectedModeName: ModeName | \"all\";\n  selectedRoot: Note | \"none\";\n}\n\n// Initial State\nconst initialState: FretboardModel = {\n  boardDisplay: boardDisplay(standardTuning),\n  tuning: standardTuning,\n  fretboard: fretboard(standardTuning),\n  selectedNotes: [],\n  selectedScale: null,\n  selectedScaleName: \"none\",\n  selectedMode: null,\n  selectedModeName: \"all\",\n  selectedRoot: \"none\",\n};\n\n// Reducer\ninterface Payload<T> {\n  payload: T;\n}\n\nexport type FretboardDispatchParam =\n  | {\n      type: \"UPDATE_TUNING\";\n      payload: BoardDisplayNote[];\n    }\n  | {\n      type: \"SELECT_NOTE\";\n      payload: Note;\n    }\n  | {\n      type: \"SELECT_SCALE\";\n      payload: Scale | null;\n    }\n  | {\n      type: \"SELECT_SCALE_NAME\";\n      payload: ScaleName | \"none\";\n    }\n  | {\n      type: \"SELECT_MODE\";\n      payload: Mode | null;\n    }\n  | {\n      type: \"SELECT_MODE_NAME\";\n      payload: ModeName | \"all\";\n    }\n  | {\n      type: \"SELECT_ROOT\";\n      payload: Note | \"none\";\n    };\n\nexport const fretboardReducer = handleActions<FretboardModel, any>(\n  {\n    UPDATE_TUNING: (state, action: Payload<BoardDisplayNote[]>) => {\n      if (action.payload) {\n        return {\n          ...state,\n          tuning: action.payload,\n          boardDisplay: boardDisplay(action.payload),\n        };\n      }\n      return state;\n    },\n    SELECT_NOTE: (state, action: Payload<Note>) => {\n      if (action.payload && state.selectedNotes.includes(action.payload)) {\n        let updatedNotes: Note[] = state.selectedNotes.filter(\n          (note) => note !== action.payload\n        );\n\n        const updatedDisplay = updateBoardDisplay(\n          state.boardDisplay,\n          updatedNotes\n        );\n        return {\n          ...state,\n          selectedNotes: updatedNotes,\n          boardDisplay: updatedDisplay,\n        };\n      } else if (action.payload) {\n        const updatedDisplay = updateBoardDisplay(state.boardDisplay, [\n          ...state.selectedNotes,\n          action.payload,\n        ]);\n        // ADD IN FUNCTIONALITY TO REMOVE NOTE ON 2ND CLICK\n        return {\n          ...state,\n          selectedNotes: [...state.selectedNotes, action.payload],\n          boardDisplay: updatedDisplay,\n        };\n      }\n      return state;\n    },\n    SELECT_SCALE: (state, action: Payload<Scale | null>) => {\n      if (action.payload) {\n        const updatedNotes: Note[] = scaleNotes(action.payload).map(\n          (detail) => detail.note\n        );\n        const updatedDisplay = updateBoardDisplay(\n          state.boardDisplay,\n          updatedNotes\n        );\n        return {\n          ...state,\n          selectedNotes: [],\n          selectedScale: action.payload,\n          boardDisplay: updatedDisplay,\n        };\n      } else {\n        return {\n          ...state,\n          selectedNotes: [],\n          selectedScale: null,\n          boardDisplay: boardDisplay(standardTuning),\n        };\n      }\n    },\n    SELECT_MODE: (state, action: Payload<Mode | null>) => {\n      if (action.payload) {\n        return {\n          ...state,\n          selectedNotes: [],\n          selectedMode: action.payload,\n          boardDisplay: modeBoardDisplay(state.boardDisplay, action.payload),\n        };\n      } else {\n        return {\n          ...state,\n          selectedNotes: [],\n          selectedMode: null,\n          boardDisplay: boardDisplay(standardTuning),\n        };\n      }\n    },\n    SELECT_ROOT: (state, action: Payload<Note | \"none\">) => {\n      if (action.payload) {\n        return {\n          ...state,\n          selectedRoot: action.payload,\n        };\n      } else {\n        return state;\n      }\n    },\n    SELECT_SCALE_NAME: (state, action: Payload<ScaleName | \"none\">) => {\n      if (action.payload) {\n        return {\n          ...state,\n          selectedScaleName: action.payload,\n        };\n      } else {\n        return state;\n      }\n    },\n    SELECT_MODE_NAME: (state, action: Payload<ModeName | \"all\">) => {\n      if (action.payload) {\n        return {\n          ...state,\n          selectedModeName: action.payload,\n        };\n      } else {\n        return state;\n      }\n    },\n  },\n  initialState\n);\n","import { Store, createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { logger } from \"./logger\";\nimport { combineReducers } from \"redux\";\nimport { RootState } from \"./state\";\nimport { fretboardReducer, FretboardDispatchParam } from \"../store/fretboard\";\nimport { useDispatch } from \"react-redux\";\n\ntype DispatchParams = FretboardDispatchParam;\ntype Dispatch = <TReturnType>(action: DispatchParams) => TReturnType;\nexport const useTypedDispatch = () => useDispatch<Dispatch>();\n\nexport const rootReducer = combineReducers<RootState>({\n  fretboard: fretboardReducer,\n});\nexport function configureStore(initialState?: RootState): Store<RootState> {\n  let middleware = applyMiddleware(logger);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    middleware = composeWithDevTools(middleware);\n  }\n\n  const store = createStore(\n    rootReducer as any,\n    initialState as any,\n    middleware\n  ) as Store<RootState>;\n\n  // if (module.hot) {\n  //   module.hot.accept('app/reducers', () => {\n  //     const nextReducer = require('app/reducers');\n  //     store.replaceReducer(nextReducer);\n  //   });\n  // }\n\n  return store;\n}\n","import { useSelector } from \"react-redux\";\nimport { ModeName, Note, ScaleName } from \"../global\";\nimport { useTypedDispatch } from \"../store\";\nimport { FretboardModel } from \"../store/fretboard\";\nimport { RootState } from \"../store/state\";\n\nexport const useActions = () => {\n  const dispatch = useTypedDispatch();\n  const { selectedScaleName, selectedModeName, selectedRoot } = useSelector<\n    RootState,\n    FretboardModel\n  >((state) => state.fretboard);\n  return {\n    setSelectedNote: (payload: Note) => {\n      dispatch({\n        type: \"SELECT_NOTE\",\n        payload,\n      });\n    },\n    setSelectedScale: (payload: ScaleName | \"none\") => {\n      if (\n        payload !== \"none\" &&\n        selectedRoot !== \"none\" &&\n        selectedModeName !== \"all\"\n      ) {\n        const mode = {\n          scale: payload,\n          name: selectedModeName,\n          note: selectedRoot,\n        };\n        dispatch({\n          type: \"SELECT_MODE\",\n          payload: mode,\n        });\n      } else if (payload !== \"none\" && selectedRoot !== \"none\") {\n        const scale = {\n          name: payload,\n          note: selectedRoot,\n        };\n        dispatch({\n          type: \"SELECT_SCALE\",\n          payload: scale,\n        });\n      } else if (payload === \"none\") {\n        dispatch({\n          type: \"SELECT_SCALE\",\n          payload: null,\n        });\n      }\n    },\n    setSelectedMode: (payload: ModeName | \"all\") => {\n      if (\n        payload !== \"all\" &&\n        selectedScaleName !== \"none\" &&\n        selectedRoot !== \"none\"\n      ) {\n        const mode = {\n          scale: selectedScaleName,\n          name: payload,\n          note: selectedRoot,\n        };\n        dispatch({\n          type: \"SELECT_MODE\",\n          payload: mode,\n        });\n      } else if (\n        payload === \"all\" &&\n        selectedScaleName !== \"none\" &&\n        selectedRoot !== \"none\"\n      ) {\n        const scale = {\n          name: selectedScaleName,\n          note: selectedRoot,\n        };\n        dispatch({\n          type: \"SELECT_SCALE\",\n          payload: scale,\n        });\n      }\n    },\n    handleRootChange: (payload: Note | \"none\") => {\n      if (payload === \"none\") {\n        dispatch({\n          type: \"SELECT_SCALE\",\n          payload: null,\n        });\n      } else if (selectedScaleName !== \"none\") {\n        if (selectedModeName !== \"all\") {\n          const mode = {\n            scale: selectedScaleName,\n            name: selectedModeName,\n            note: payload,\n          };\n          dispatch({\n            type: \"SELECT_MODE\",\n            payload: mode,\n          });\n        } else {\n          const scale = {\n            name: selectedScaleName,\n            note: payload,\n          };\n          dispatch({\n            type: \"SELECT_SCALE\",\n            payload: scale,\n          });\n        }\n      }\n    },\n    setSelectedScaleName: (payload: ScaleName | \"none\") =>\n      dispatch({\n        type: \"SELECT_SCALE_NAME\",\n        payload,\n      }),\n    setSelectedModeName: (payload: ModeName | \"all\") =>\n      dispatch({\n        type: \"SELECT_MODE_NAME\",\n        payload,\n      }),\n    setSelectedRoot: (payload: Note | \"none\") => {\n      dispatch({\n        type: \"SELECT_ROOT\",\n        payload,\n      });\n    },\n  };\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useDebounce = (value: any, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { DialOption, ModeName, ScaleName } from \"../../../../global\";\nimport { useActions } from \"../../../../hooks/useActions\";\nimport { useDebounce } from \"../../../../hooks/useDebounce\";\nimport { FretboardModel } from \"../../../../store/fretboard\";\nimport { RootState } from \"../../../../store/state\";\n\nconst Option = styled.p.attrs(\n  (props: {\n    bottom: number;\n    left: number;\n    selected: boolean;\n    disabled: boolean;\n  }) => ({\n    bottom: props.bottom || 0,\n    left: props.left || 0,\n    selected: props.selected || false,\n    disabled: props.disabled || false,\n  })\n)`\n  position: absolute;\n  bottom: ${(props) => props.bottom}px;\n  left: ${(props) => props.left}px;\n  color: ${(props) =>\n    props.disabled ? \"#666\" : props.selected ? \"#3553ff\" : \"#fff\"};\n  font-weight: ${(props) =>\n    props.selected && !props.disabled ? \"600\" : \"400\"};\n  font-size: 0.8rem;\n  width: 70px;\n`;\n\n// props.disabled ? \"#333\" : props.selected ? \"#3553ff\" : \"#fff\"};\nconst modes: DialOption<ModeName>[] = [\n  {\n    label: \"Ionian\",\n    bottom: 30,\n    left: 90,\n  },\n  {\n    label: \"Dorian\",\n    bottom: 115,\n    left: 50,\n  },\n  {\n    label: \"Phrygian\",\n    bottom: 205,\n    left: 75,\n  },\n  {\n    label: \"Lydian\",\n    bottom: 235,\n    left: 182,\n  },\n  {\n    label: \"Mixolydian\",\n    bottom: 205,\n    left: 275,\n  },\n  {\n    label: \"Aeolian\",\n    bottom: 115,\n    left: 310,\n  },\n  {\n    label: \"Locrian\",\n    bottom: 30,\n    left: 270,\n  },\n];\n\ninterface OptProps {\n  angle: number;\n  min: (idx: number) => number;\n  max: (idx: number) => number;\n  disabled?: boolean;\n}\n\nconst ModeOptions: FunctionComponent<OptProps> = React.memo(\n  (props: OptProps) => {\n    const { angle, min, max, disabled } = props;\n\n    const { selectedModeName } = useSelector<RootState, FretboardModel>(\n      (state) => state.fretboard\n    );\n    const { setSelectedModeName, setSelectedMode } = useActions();\n    const debouncedMode = useDebounce(selectedModeName, 200);\n\n    const angleHash = modes.reduce(\n      (\n        acc: { [val: string]: [number, number] },\n        el: DialOption<ModeName>,\n        idx: number\n      ) => {\n        acc[el.label] = [min(idx + 1), max(idx + 1)];\n        return acc;\n      },\n      {}\n    );\n\n    const bottomSelectionMin = min(0);\n    const bottomSelectionMax = max(0);\n\n    useEffect(() => {\n      setSelectedMode(debouncedMode as ModeName);\n    }, [debouncedMode]);\n\n    return (\n      <>\n        {modes.map((opt: DialOption<ModeName>, idx: number) => {\n          if (\n            angle >= angleHash[opt.label][0] &&\n            angle < angleHash[opt.label][1] &&\n            opt.label !== selectedModeName\n          ) {\n            setSelectedModeName(opt.label);\n          } else if (\n            (angle >= bottomSelectionMin || angle <= bottomSelectionMax) &&\n            selectedModeName !== \"all\"\n          ) {\n            setSelectedModeName(\"all\");\n          }\n          return (\n            <div key={opt.label}>\n              <Option\n                bottom={opt.bottom}\n                left={opt.left}\n                selected={opt.label === selectedModeName}\n                disabled={disabled}\n              >\n                {opt.label}\n              </Option>\n              <Option\n                bottom={0}\n                left={190}\n                selected={selectedModeName === \"all\"}\n                disabled={disabled}\n              >\n                All\n              </Option>\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n);\n\nexport default ModeOptions;\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { DialOption, ScaleName } from \"../../../../global\";\nimport { useActions } from \"../../../../hooks/useActions\";\nimport { useDebounce } from \"../../../../hooks/useDebounce\";\nimport { FretboardModel } from \"../../../../store/fretboard\";\nimport { RootState } from \"../../../../store/state\";\n\nconst Option = styled.p.attrs(\n  (props: { bottom: number; left: number; selected: boolean }) => ({\n    bottom: props.bottom || 0,\n    left: props.left || 0,\n    selected: props.selected || false,\n  })\n)`\n  position: absolute;\n  bottom: ${(props) => props.bottom}px;\n  left: ${(props) => props.left}px;\n  color: ${(props) => (props.selected ? \"#3553ff\" : \"#fff\")};\n  font-weight: ${(props) => (props.selected ? \"600\" : \"400\")};\n  font-size: 0.8rem;\n  width: 70px;\n`;\n\nconst scales: DialOption<ScaleName>[] = [\n  {\n    label: \"Natural Minor\",\n    bottom: 25,\n    left: 70,\n  },\n  {\n    label: \"Natural Major\",\n    bottom: 130,\n    left: 50,\n  },\n  {\n    label: \"Major Blues\",\n    bottom: 220,\n    left: 120,\n  },\n  {\n    label: \"Minor Blues\",\n    bottom: 220,\n    left: 250,\n  },\n  {\n    label: \"Major Pentatonic\",\n    bottom: 130,\n    left: 308,\n  },\n  {\n    label: \"Minor Pentatonic\",\n    bottom: 25,\n    left: 280,\n  },\n];\n\ninterface OptProps {\n  angle: number;\n  min: (idx: number) => number;\n  max: (idx: number) => number;\n  disabled?: boolean;\n}\n\nconst ScaleOptions: FunctionComponent<OptProps> = React.memo(\n  (props: OptProps) => {\n    const { angle, min, max } = props;\n\n    const angleHash = scales.reduce(\n      (\n        acc: { [val: string]: [number, number] },\n        el: DialOption<ScaleName>,\n        idx: number\n      ) => {\n        acc[el.label] = [min(idx + 1), max(idx + 1)];\n        return acc;\n      },\n      {}\n    );\n\n    const bottomSelectionMin = min(0);\n    const bottomSelectionMax = max(0);\n\n    const { selectedScaleName } = useSelector<RootState, FretboardModel>(\n      (state) => state.fretboard\n    );\n\n    const { setSelectedScaleName, setSelectedScale } = useActions();\n    const debouncedScale = useDebounce(selectedScaleName, 200);\n\n    useEffect(() => {\n      setSelectedScale(debouncedScale as ScaleName);\n    }, [debouncedScale]);\n\n    return (\n      <>\n        {scales.map((opt: DialOption<ScaleName>, idx: number) => {\n          if (\n            angle >= angleHash[opt.label][0] &&\n            angle < angleHash[opt.label][1] &&\n            opt.label !== selectedScaleName\n          ) {\n            setSelectedScaleName(opt.label);\n          } else if (\n            (angle >= bottomSelectionMin || angle <= bottomSelectionMax) &&\n            selectedScaleName !== \"none\"\n          ) {\n            setSelectedScaleName(\"none\");\n          }\n\n          return (\n            <div key={opt.label}>\n              <Option\n                bottom={opt.bottom}\n                left={opt.left}\n                selected={opt.label === selectedScaleName}\n              >\n                {opt.label}\n              </Option>\n              <Option\n                bottom={0}\n                left={183}\n                selected={selectedScaleName === \"none\"}\n              >\n                None\n              </Option>\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n);\n\nexport default ScaleOptions;\n","import React, { FunctionComponent, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { DialOption, ModeName, ScaleName } from \"../../../../global\";\nimport { useActions } from \"../../../../hooks/useActions\";\nimport { useDebounce } from \"../../../../hooks/useDebounce\";\nimport { FretboardModel } from \"../../../../store/fretboard\";\nimport { RootState } from \"../../../../store/state\";\nimport { modes, scales } from \"../../../../store/static\";\nimport ModeOptions from \"./ModeOptions\";\nimport ScaleOptions from \"./ScaleOptions\";\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  width: 400px;\n  height: 240px;\n  position: relative;\n  padding-bottom: 40px;\n`;\n\nconst Option = styled.p.attrs(\n  (props: { bottom: number; left: number; selected: boolean }) => ({\n    bottom: props.bottom || 0,\n    left: props.left || 0,\n    selected: props.selected || false,\n  })\n)`\n  position: absolute;\n  bottom: ${(props) => props.bottom}px;\n  left: ${(props) => props.left}px;\n  color: ${(props) => (props.selected ? \"#3553ff\" : \"#fff\")};\n  font-weight: ${(props) => (props.selected ? \"600\" : \"400\")};\n  font-size: 0.8rem;\n  width: 70px;\n`;\n\ninterface Props {\n  children?: any;\n  type: \"scales\" | \"modes\";\n  angle: number;\n  setAngle: (val: number) => void;\n  scale?: ScaleName | \"\";\n  mode?: ModeName | \"\";\n}\nconst Options: FunctionComponent<Props> = (props: Props) => {\n  const { children, type, angle, setAngle } = props;\n  const { selectedScaleName } = useSelector<RootState, FretboardModel>(\n    (state) => state.fretboard\n  );\n\n  useEffect(() => {\n    if (type === \"modes\" && selectedScaleName === \"none\") {\n      setAngle(0);\n    }\n  }, [selectedScaleName]);\n\n  const increment =\n    type === \"scales\"\n      ? 360 / (Object.keys(scales).length + 1)\n      : 360 / (Object.keys(modes).length + 1);\n  const half = increment / 2;\n  const min = (idx: number) => {\n    return idx === 0 ? 360 - half : idx * increment - half;\n  };\n  const max = (idx: number) => idx * increment + half;\n\n  return (\n    <Root>\n      {type === \"scales\" ? (\n        <ScaleOptions angle={angle} min={min} max={max} />\n      ) : (\n        <ModeOptions\n          angle={angle}\n          min={min}\n          max={max}\n          disabled={selectedScaleName === \"none\"}\n        />\n      )}\n      {children}\n    </Root>\n  );\n};\n\nexport default Options;\n","import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { FretboardModel } from \"../../../store/fretboard\";\nimport { RootState } from \"../../../store/state\";\nimport DialMarker from \"./DialMarker\";\nimport Options from \"./Options/Options\";\n\nconst Root = styled.div`\n  display: flex;\n`;\n\nconst Outline = styled.div.attrs((props: { selected: boolean }) => ({\n  selected: props.selected,\n}))`\n  height: 200px;\n  width: 200px;\n  border-radius: 100px;\n  background-color: ${(props) => (props.selected ? \"#3553ff\" : \"#97a6ff\")};\n  box-shadow: ${(props) => (props.selected ? \"0 0px 10px #4863ff\" : \"none\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Bevel = styled.div`\n  height: 186px;\n  width: 186px;\n  border-radius: 93px;\n  background: linear-gradient(315deg, #000, #888);\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Center = styled.div`\n  height: 176px;\n  width: 176px;\n  border-radius: 88px;\n  background: linear-gradient(315deg, #222 1%, #ccc 80%);\n  position: relative;\n`;\n\ninterface Props {\n  type: \"scales\" | \"modes\";\n}\n\nconst Dial: FunctionComponent<Props> = (props: Props) => {\n  const { type } = props;\n  const RADIUS = 88;\n\n  const [selected, setSelected] = useState(false);\n\n  const [angle, setAngle] = useState(0);\n  const dialRef = useRef<HTMLDivElement>(null);\n  const [center, setCenter] = useState({ x: 0, y: 0 });\n  const [disabled, setDisabled] = useState(false);\n\n  const { selectedScaleName } = useSelector<RootState, FretboardModel>(\n    (state) => state.fretboard\n  );\n\n  useEffect(() => {\n    if (dialRef.current && center.x === 0) {\n      const { x, y } = dialRef.current.getBoundingClientRect();\n\n      setCenter({\n        x: x + RADIUS,\n        y: y + RADIUS,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (type === \"modes\" && selectedScaleName === \"none\") {\n      setDisabled(true);\n    } else if (disabled) {\n      setDisabled(false);\n    }\n  }, [selectedScaleName]);\n  return (\n    <Root>\n      <Options type={type} angle={angle} setAngle={setAngle}>\n        <Outline selected={selected}>\n          <Bevel>\n            <Center ref={dialRef}>\n              <DialMarker\n                setSelected={setSelected}\n                center={center}\n                angle={angle}\n                setAngle={setAngle}\n                disabled={disabled}\n              />\n            </Center>\n          </Bevel>\n        </Outline>\n      </Options>\n    </Root>\n  );\n};\n\nexport default Dial;\n","import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { frequencies } from \"../../../store/static\";\n\nconst Root = styled.div``;\nconst Control = styled.div`\n  margin: 10px;\n  padding: 10px;\n  background-color: #aaa;\n  cursor: pointer;\n`;\n\nconst BPMDisplay: FunctionComponent = (props) => {\n  const [beats, setBeats] = useState(120); // range from 30 to 250\n  const [clicker, setClicker] = useState<any>(null);\n\n  // Metronome audio config\n  const audioCxt = new AudioContext();\n  const osc: OscillatorNode = audioCxt.createOscillator();\n  const gainNode: GainNode = audioCxt.createGain();\n  osc.type = \"triangle\";\n  osc.frequency.value = frequencies[\"C\"][2];\n  gainNode.connect(audioCxt.destination);\n  osc.connect(gainNode);\n\n  /*\n    create audio context, oscillator, and gain node\n    config osc and gain\n\n    call start\n    while clicker is true, repeat clicker volume off and on at set interval\n    when clicker turns false call stop\n  */\n\n  useEffect(() => {\n    if (clicker) {\n      osc.start(audioCxt.currentTime);\n\n      while (clicker) {\n        gainNode.gain.setValueAtTime(0, audioCxt.currentTime + 0.1);\n      }\n    }\n  }, [clicker]);\n\n  const playSound = () => {\n    // osc = audioCxt.createOscillator();\n    // const gainNode = audioCxt.createGain();\n\n    gainNode.gain.value = 0.2;\n    const currGain = gainNode.gain.value;\n    osc.type = \"triangle\";\n    osc.frequency.value = frequencies[\"C\"][2];\n    gainNode.connect(audioCxt.destination);\n    osc.connect(gainNode);\n    osc.start(audioCxt.currentTime);\n\n    // gainNode.gain.setValueAtTime(0, audioCxt.currentTime + 0.1);\n    // gainNode.gain.setValueAtTime(currGain, audioCxt.currentTime + 0.2);\n    // gainNode.gain.setValueAtTime(0, audioCxt.currentTime + 0.3);\n    // gainNode.gain.setValueAtTime(currGain, audioCxt.currentTime + 0.4);\n    // gainNode.gain.setValueAtTime(0, audioCxt.currentTime + 0.5);\n    // gainNode.gain.setValueAtTime(currGain, audioCxt.currentTime + 0.6);\n    // gainNode.gain.setValueAtTime(0, audioCxt.currentTime + 0.7);\n    // gainNode.gain.setValueAtTime(currGain, audioCxt.currentTime + 0.8);\n    // gainNode.gain.setValueAtTime(0, audioCxt.currentTime + 0.9);\n    // gainNode.gain.setValueAtTime(currGain, audioCxt.currentTime + 1);\n\n    setInterval(\n      gainNode.gain.setValueAtTime(0, audioCxt.currentTime + 0.1),\n      0.1\n    );\n    osc.stop(audioCxt.currentTime + 1.1);\n    if (clicker) {\n      // metroClick.currentTime = 2;\n      // setClicker(setInterval(() => metroClick.play(), 50));\n    }\n  };\n\n  const stopSound = () => {\n    console.log(\"stop\", audioCxt.currentTime);\n    osc.stop();\n  };\n  return (\n    <Root>\n      <Control onClick={playSound}>Play</Control>\n      <Control onClick={stopSound}>Stop</Control>\n    </Root>\n  );\n};\n\nexport default BPMDisplay;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport BPMDisplay from \"./BPMDisplay\";\n\nconst Root = styled.div`\n  margin-top: 40px;\n  font-size: 1.5em;\n  min-width: 1260px;\n  display: flex;\n  justify-content: center;\n`;\nconst MixBoardContainer = styled.div`\n  width: 1264px;\n`;\n\nconst PanelWrapper = styled.div`\n  display: flex;\n  background: #1b1b1b;\n  border-radius: 10px 10px 0 0;\n  box-shadow: 2px 2px 2px #222;\n  padding: 10px 0;\n`;\nconst MidPanelWrapper = styled.div`\n  display: flex;\n  background: #1b1b1b;\n  box-shadow: 2px 2px 2px #222;\n  padding: 10px 0;\n`;\n\nconst Metronome: FunctionComponent = (props) => {\n  return (\n    <Root>\n      <BPMDisplay />\n    </Root>\n  );\n};\n\nexport default Metronome;\n","import React, { FunctionComponent } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { BoardDisplayNote } from \"../../../global\";\nimport { useActions } from \"../../../hooks/useActions\";\nimport { FretboardModel } from \"../../../store/fretboard\";\nimport { RootState } from \"../../../store/state\";\nimport { initialNotes } from \"../../../store/static\";\n\nconst NotesWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n`;\n\nconst NoteGradient = styled.div`\n  color: #fff;\n`;\nconst NoteStyle = styled.div.attrs((props: { selected: boolean }) => ({\n  selected: props.selected,\n}))`\n  height: 62px;\n  background: linear-gradient(315deg, #222 1%, #888);\n  border-radius: 2px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  box-shadow: ${(props) => (props.selected ? \"none\" : \"0 3px 0px #777\")};\n  margin-top: ${(props) => (props.selected ? \"0px\" : \"-2px\")};\n`;\n\nconst Outline = styled.div.attrs((props: { selected: boolean }) => ({\n  selected: props.selected,\n}))`\n  margin: 0 5px;\n  width: 60px;\n  height: 62px;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  cursor: pointer;\n  border: 3px solid ${(props) => (props.selected ? \"#3553ff\" : \"#97a6ff\")};\n  box-shadow: ${(props) => (props.selected ? \"0 0px 10px #4863ff\" : \"none\")};\n  -webkit-box-shadow: ${(props) =>\n    props.selected ? \"0 0px 10px #4863ff\" : \"none\"};\n  -moz-box-shadow: ${(props) =>\n    props.selected ? \"0 0px 10px #4863ff\" : \"none\"};\n  -ms-box-shadow: ${(props) =>\n    props.selected ? \"0 0px 10px #4863ff\" : \"none\"};\n  -o-box-shadow: ${(props) => (props.selected ? \"0 0px 10px #4863ff\" : \"none\")};\n  transition: all 0.1s ease-in-out;\n`;\n\ninterface Props {}\n\nconst Notes: FunctionComponent<Props> = (props: Props) => {\n  const { selectedNotes } = useSelector<RootState, FretboardModel>(\n    (state) => state.fretboard\n  );\n  const { setSelectedNote } = useActions();\n  return (\n    <NotesWrapper>\n      {initialNotes.map((noteDetails: BoardDisplayNote) => {\n        const highlight = selectedNotes.includes(noteDetails.note);\n        return (\n          <Outline key={noteDetails.note} selected={highlight}>\n            <NoteStyle\n              selected={highlight}\n              onClick={() => {\n                setSelectedNote(noteDetails.note);\n              }}\n            >\n              <NoteGradient>{noteDetails.note}</NoteGradient>\n            </NoteStyle>\n          </Outline>\n        );\n      })}\n    </NotesWrapper>\n  );\n};\n\nexport default Notes;\n","import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Note } from \"../../../global\";\nimport { useActions } from \"../../../hooks/useActions\";\nimport { useDebounce } from \"../../../hooks/useDebounce\";\nimport { FretboardModel } from \"../../../store/fretboard\";\nimport { RootState } from \"../../../store/state\";\nimport { initialNotes } from \"../../../store/static\";\n\nconst SliderContainer = styled.div`\n  height: 280px;\n  width: 150px;\n`;\n\nconst NoteSlider = styled.div`\n  transform: rotate(270deg);\n  width: 250px;\n  margin-top: 130px;\n\n  .slider {\n    flex: 6;\n    -webkit-appearance: none;\n    width: 100%;\n    height: 5px;\n    border-radius: 5px;\n    background: #fff;\n    outline: none;\n    &::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      appearance: none;\n      width: 40px;\n      height: 25px;\n      background: linear-gradient(to right, #333 5%, #fff 20%, #444 80%, #ccc);\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    &::-moz-range-thumb {\n      width: 25px;\n      height: 25px;\n      background: linear-gradient(to top, #333 5%, #ccc 20%, #000 %50, #eee 5%);\n      cursor: pointer;\n    }\n  }\n`;\n\nconst NoteWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 235px;\n  margin-top: 8px;\n`;\n\nconst NoteLabel = styled.div`\n  font-size: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CurrentNote = styled.div`\n  flex: 1;\n  font-size: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n`;\n\ninterface Props {}\n\nconst Slider: FunctionComponent<Props> = (props: Props) => {\n  const [increment, setIncrement] = useState(-1);\n  const sliderRef = useRef<HTMLInputElement>(null);\n\n  const { selectedRoot } = useSelector<RootState, FretboardModel>(\n    (state) => state.fretboard\n  );\n\n  const { setSelectedRoot, handleRootChange } = useActions();\n  const debouncedRoot = useDebounce(selectedRoot, 200);\n\n  useEffect(() => {\n    if (increment >= 0) {\n      setSelectedRoot(initialNotes[increment].note);\n    } else {\n      setSelectedRoot(\"none\");\n    }\n  }, [increment]);\n\n  useEffect(() => {\n    handleRootChange(debouncedRoot as Note | \"none\");\n  }, [debouncedRoot]);\n\n  return (\n    <>\n      <SliderContainer>\n        <NoteSlider>\n          <input\n            ref={sliderRef}\n            className=\"slider\"\n            type=\"range\"\n            min=\"-1\"\n            max=\"11\"\n            step=\"1\"\n            value={increment}\n            onChange={(event) => {\n              setIncrement(Number(event.target.value));\n            }}\n          />\n        </NoteSlider>\n      </SliderContainer>\n      <NoteWrapper>\n        <NoteLabel>G#</NoteLabel>\n        <CurrentNote>\n          {selectedRoot !== \"none\" ? selectedRoot : \"Off\"}\n        </CurrentNote>\n        <NoteLabel>A</NoteLabel>\n      </NoteWrapper>\n    </>\n  );\n};\n\nexport default Slider;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport Dial from \"./Dial/Dial\";\nimport Metronome from \"./Metronome/Metronome\";\nimport Notes from \"./Notes/Notes\";\nimport Slider from \"./Slider/Slider\";\n\nconst Root = styled.div`\n  margin-top: 40px;\n  font-size: 1.5em;\n  min-width: 1260px;\n  display: flex;\n  justify-content: center;\n`;\nconst MixBoardContainer = styled.div`\n  width: 1264px;\n`;\n\nconst PanelWrapper = styled.div`\n  display: flex;\n  background: #1b1b1b;\n  border-radius: 10px 10px 0 0;\n  box-shadow: 2px 2px 2px #222;\n  padding: 10px 0;\n`;\nconst MidPanelWrapper = styled.div`\n  display: flex;\n  background: #1b1b1b;\n  box-shadow: 2px 2px 2px #222;\n  padding: 10px 0;\n`;\n\nconst MixBoard: FunctionComponent = (props) => {\n  return (\n    <>\n      <Metronome />\n      <Root>\n        <MixBoardContainer>\n          <PanelWrapper>\n            <Dial type={\"scales\"} />\n            <Dial type={\"modes\"} />\n            <Slider />\n          </PanelWrapper>\n          <MidPanelWrapper>\n            <Notes />\n          </MidPanelWrapper>\n        </MixBoardContainer>\n      </Root>\n    </>\n  );\n};\n\nexport default MixBoard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Main from \"./components/Main/Main\";\nimport MixBoard from \"./components/MixBoard/MixBoard\";\n\nconst Root = styled.div`\n  font: normal 14px Open Sans;\n  padding: 30px;\n  position: relative;\n`;\nconst Title = styled.div`\n  display: flex;\n  font: normal 2em Varela Round;\n  padding: 20px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <Root>\n      <div>\n        <Main />\n        <MixBoard />\n      </div>\n    </Root>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { configureStore } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}